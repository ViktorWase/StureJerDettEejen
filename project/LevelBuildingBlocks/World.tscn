[gd_scene load_steps=15 format=2]

[ext_resource path="res://Scripts/Water3D.gd" type="Script" id=1]
[ext_resource path="res://Materials/Water3D.shader" type="Shader" id=2]
[ext_resource path="res://Assets/grid-white-64x64.png" type="Texture" id=3]
[ext_resource path="res://Assets/water.png" type="Texture" id=4]
[ext_resource path="res://Scripts/World.gd" type="Script" id=5]

[sub_resource type="BoxShape" id=1]
extents = Vector3( 1.49366, 1, 3.01903 )

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=5]
constant = Vector3( 60, 60, 0 )

[sub_resource type="VisualShader" id=6]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Vector:5
	vec3 n_out5p0 = vec3(60.000000, 60.000000, 0.000000);

// VectorOp:4
	vec3 n_out4p0 = n_out3p0 * n_out5p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out4p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -113, 0 )
nodes/fragment/0/position = Vector2( 880, 100 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( 580, 100 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -20, 100 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 320, 100 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -80, 280 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1, 5, 0, 4, 1, 3, 0, 4, 0, 4, 0, 2, 0 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[sub_resource type="PlaneMesh" id=8]
material = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=9]
shader = ExtResource( 2 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/normal_scale = 1.0
shader_param/uv1_scale = Vector3( 10, 10, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/time = null
shader_param/offset = null
shader_param/size = Vector2( 128, 128 )
shader_param/texture_detail_albedo = ExtResource( 4 )

[node name="World" type="Spatial"]
script = ExtResource( 5 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.816503, 0.340731, -0.466074, 0.0746698, 0.738174, 0.670465, 0.572492, -0.582239, 0.577279, 0, 7.32225, 0 )
light_color = Color( 1, 0.890196, 0.631373, 1 )
light_energy = 0.3
shadow_enabled = true

[node name="gridarea" type="Area" parent="."]
transform = Transform( 20, 0, 0, 0, 1, 4.76837e-07, 0, 0, 10, 0, 0.193958, 2.28882e-05 )
collision_layer = 2

[node name="CollisionShape" type="CollisionShape" parent="gridarea"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
shape = SubResource( 1 )

[node name="grid" type="MeshInstance" parent="."]
transform = Transform( 30, 0, 0, 0, 1, 0, 0, 0, 30, 0, 0.335, 0 )
layers = 2
mesh = SubResource( 8 )
material/0 = null

[node name="water" type="MeshInstance" parent="."]
transform = Transform( 30, 0, 0, 0, 1, 0, 0, 0, 30, 0, -0.165127, 0 )
mesh = SubResource( 8 )
material/0 = SubResource( 9 )
script = ExtResource( 1 )
